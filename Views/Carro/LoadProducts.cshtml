@model IEnumerable<ComercioElectronicoMvc.Models.Producto>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/LayoutUsuario.cshtml";
}

<h1>Catálogo de productos</h1>

@if (@ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        <strong>@ViewData["ErrorMessage"]</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<form asp-action="LoadProducts" method="get">
    <div class="form-actions no-color">
        <p>
            Buscar Producto por Nombre: <input type="text" name="searchProduct" value="@ViewData["SearchProduct"]" />
        </p>
        <select name="categoriaId">
            <option value="" selected>Filtrar Categoria</option>
            @foreach (Categoria cat in (IEnumerable<Categoria>)ViewData["categorias"])
            {
                <option value="@cat.categoriaId">@Html.DisplayFor(modelItem => cat.nombre)</option>
            }
        </select>
        <input type="submit" value="Aplicar Filtros" class="btn btn-default"/>
    </div>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="LoadProducts" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.nombre)</a>
            </th>
            <th>
                <a asp-action="LoadProducts" asp-route-sortOrder="@ViewData["PriceSort"]">@Html.DisplayNameFor(model => model.precio)</a>
            </th>
            <th>
                @Html.DisplayName("Stock")
            </th>
            <th>
                @Html.DisplayName("Categoria")
            </th>
            <th>
                @Html.DisplayName("Cantidad")
            </th>
            <th>
                @Html.DisplayName("Acciones del carro")
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.nombre)
                </td>
                <td>
                    @{
                        double precioUnitario = 0;
                        if (ViewBag.EsEmpresa) precioUnitario = item.precio * 0.79;
                        else precioUnitario = item.precio;
                    }

                    $@Html.DisplayName(Convert.ToString(precioUnitario))
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.cantidad)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.categoria.nombre)
                </td>
                <td>
                    @if (ViewBag.Rel_Carro_Productos != null)
                    {
                        @foreach (Rel_Carro_Producto rcp in (List<Rel_Carro_Producto>)@ViewBag.Rel_Carro_Productos)
                        {
                            @if (rcp.productoId == item.productoId)
                            {
                                <span class="text-danger">@rcp.cantidad</span>
                            }
                        }
                    }
                </td>
                <td>
                    <a class="text-success"
                   asp-controller="Carro"
                   asp-action="AgregarAlCarro"
                   asp-route-id="@item.productoId">Agregar</a> |
                    <a class="text-warning"
                   asp-controller="Carro"
                   asp-action="RestarDelCarro"
                   asp-route-id="@item.productoId">Restar</a> |
                    <a class="text-danger"
                   asp-controller="Carro"
                   asp-action="EliminarDelCarro"
                   asp-route-id="@item.productoId">Eliminar todos</a>
                </td>
            </tr>
        }
    </tbody>
</table>
